name: nomination

on:
  pull_request_target:
    types: [edited, opened, synchronize, reopened]

permissions:
  issues: write
  pull-requests: write

jobs:
  process:
    name: Check
    runs-on: ubuntu-latest
    if: ${{ ! contains(github.event.pull_request.labels.*.name, 'nomination') && github.event.pull_request.head.ref != 'create-pull-request/sync' }}
    steps:
      - uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
      - name: Get GitHub App User Git String
        id: user
        run: |
          userId=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)
          name="${{ steps.app-token.outputs.app-slug }}[bot]"
          email="$userId+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com"
          git config --global user.name "$name"
          git config --global user.email "$email"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
      - name: Fetch source
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
      - name: Process nomination
        run: |
          set -o pipefail
          gh api "repos/$REPOSITORY/pulls/{{ github.event.pull_request.number }}/files" \
            --jq '.[] | "\(.status) \(.filename)"' \
            | scripts/nomination.sh members "$REPOSITORY" {{ github.event.pull_request.number }} {{ github.event.pull_request.title }} UNKNOWN_NUMBER
        env:
          REPOSITORY: ${{ github.repository }}
          ANNOUNCEMENT_ISSUE_NUMBER: ${{ github.repository_owner == 'NixOS' && 999999 || 30 }}
          GH_TOKEN: ${{ github.token }}
          PROD: "1"
